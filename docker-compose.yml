#services:
#  db:
#    image: postgres:15
#    environment:
#      POSTGRES_DB: 'time_sync_pro'
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: 'Asdf123'
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#
#  redis:
#    image: redis:5.0.8
#    ports:
#      - "6379:6379"
#
#  web:
#    build: .
#    command: gunicorn TimeSyncPro.wsgi:application --bind 0.0.0.0:8000
#    volumes:
#      - .:/usr/src/app
#    ports:
#      - "8000:8000"
#    depends_on:
#      - db
#      - redis
#    environment:
#      - POSTGRES_DB=time_sync_pro
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=Asdf123
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#
#  worker:
#    build: .
#    command: celery -A TimeSyncPro worker --loglevel=info
#    volumes:
#      - .:/usr/src/app
#    depends_on:
#      - redis
#      - db
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#
#  beat:
#    build: .
#    command: celery -A TimeSyncPro beat --loglevel=info
#    volumes:
#      - .:/usr/src/app
#    depends_on:
#      - redis
#      - db
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#
#  flower:
#    build: ./
#    command: celery -A TimeSyncPro flower --port=5555
#    ports:
#      - "5555:5555"
#    depends_on:
#      - redis
#      - db
#      - web
#      - worker
#    environment:
#      - CELERY_BROKER_URL=redis://redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis:6379/0
#
#
#volumes:
#  postgres_data:

#
#version: '3.4'
#
#services:
#  mailcatcher:
#    image: schickling/mailcatcher
#    ports:
#        - "1080:1080"
#        - "1025:1025"
#  redis:
#    image: redis:alpine
#    ports:
#        - "6379:6379"
#  redisinght:
#    image: redislabs/redisinsight:latest
#    ports:
#        - "5540:5540"


#
#services:
#  redis:
#    container_name: redis_compose
#    image: redis:latest
#    ports:
#      - "6379:6379"
#
#  django-app:
#    build:
#      context: .
#    container_name: django-app
#    ports:
#      - "8000:8000"
#    depends_on:
#      - redis
#    environment:
#      - CELERY_BROKER_URL=redis://redis_compose:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis_compose:6379/0
#    env_file:
#        - .env
#
#  celery-worker:
#    build:
#      context: .
#    container_name: celery-worker
#    command: celery -A TimeSyncPro worker --loglevel=info
#    depends_on:
#      - redis
#      - db
#    environment:
#      - CELERY_BROKER_URL=redis://redis_compose:6379/0
#      - CELERY_RESULT_BACKEND=redis://redis_compose:6379/0
#
#  web:
#    build:
#      context: .
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - .:/app
#    ports:
#      - "8080:8000"
#    depends_on:
#      db:
#        condition: service_healthy
#    environment:
#      - DATABASE_HOST=${WEB_DB_HOST}
#      - DATABASE_PORT=${DB_PORT}
#      - DATABASE_NAME=${DB_NAME}
#      - DATABASE_USER=${DB_USER}
#      - DATABASE_PASSWORD=${DB_PASSWORD}
#
#  db:
#    image: postgres:15
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5


services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  celery:
    build: .
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - REDIS_HOST=redis